Bug list for Defense Condition game project

Author(s): Ray Gardener (support@daylongraphics.com)
Repository: https://github.com/RayOfDaylon/Defcon
September 28, 2023


FIXED: Broke ILiveGameObject by forgetting to move shield setup code from its ctor
to IGameObject's.


Strange... warped over to an abduction but was nowhere near 
at the right altitude.

S/B FIXED: Ghosts and reformers could fail a NaN check in 
when spawning parts in their AboutToDie methods, because 
the part locations were initialized only in Tick and in 
rare cases, the object could get destroyed before ticking 
even once. So the locations determination is made in a 
method and also called by the ctor.

FIXED: The readouts in the Stats panel don't line up in their 
vertical column because we're using padding after each 
text label, when we should be using a Grid container.
No matter how I tweak the padding, it keeps shifting.

FIXED: Accidentally broke the player ship explosion.

FIXED: UMG progress bar widget has a color rendering bug.
Will fix by making my own widget. This will also 
handle the border width issue better, assuming we 
keep using a border around the shield readout.

FIXED: After several messages appeared, the message log stopped 
deleting them, just letting them be in a frozen pile.
Adding more messages didn't "wake up" the log. 
    Happened because "smartbomb awarded" message was using 
mediator.send instead of mediator.telluser and setting the 
payload to &FString instead of a struct which included a 
duration.

FIXED: Two spacehums at the end of a first mission 
were stationary, merely vibrating in place.
No matter how low the XP is when a spachum is spawned, 
it should have some hunting speed.
    Spacehums now have their own ranged prefval
which is sampled better based on XP.

FIXED: CFlak can have NaN orientation.fwd.
   Turns out when a smartbomb detonated and the ship's position happened 
to coincide with a debris piece, the shockwave push vector wound up 
being NaN, corrupting the debris' orientation.fwd. Added CFPoint::NormalizeSafe
to convert normalizations to zero.

FIXED: A few places here and there where game object weren't init'ing 
their members fully, leaving some of them NaN.

FIXED: Still getting the "nonexistant enemy" problem in the Yllabian Dogfight mission. 
Turns out the guppy positions became NaN because member Frequency was not initialized.
Same for the hunter enemy. CFPoint::IsValid added which checks for NaN and is called 
by the game object processor.

FIXED: Terrain is occluding player ship and humans. 
We had this fixed but muffed it again somehow.
Needed to call CreateTerrain before InitMission.

FIXED: Humans carried by player sometimes will get struck 
by friendly fire, probably because the laser bolt 
trailing point manages to intersect the human hitbox.
Their "can be injured" state is set to false while being carried
by the player.

Humans still show gratitude when just walking around 
and bumping into local terrain span i.e. they walk 
enough above the terrain to make them fall back.

FIXED: Human walk animation stride too large, not congruent 
with speed they're actually moving.

FIXED: Human walk animation had one frame too many.

FIXED: Humans readout fails to reset when restarting game match.

FIXED: Removed flicker from humans readout in stats panel.

FIXED: Stats panel could indicate human being abducted even after 
the lander carrying him was killed.

FIXED: Phreds were spawning too many munchies, so
now they don't countdown to spawning unless 
they're visible in the main play widget.

FIXED: Accidentally introduced a bug that would cause a 
sprite to try installing an already installed widget.

FIXED: Game over screen sometimes showed stats immediately
instead of fading them in. We had set the stats widget opacity 
too early in NativeOnInitialized instead of in OnActivate.

FIXED: Terrain overlaps player ship and most enemy ships.
Terrain drawing was moved to a new widget, SDefconTerrain.

Stars overlap player ship and most enemy ships. Can fix by making stars use a widget.
Although the problem is so faint it could rank as the most cosmetic bug ever.

FIXED: When humans are sometimes debarked by player ship, they actually are 
above the terrain by a small amount and need to fall for a brief moment
before being on the ground. This causes excess gratitude icons to appear 
or the player ship can even embark the human back if he moves quickly enough.

FIXED: When mission picked, expanding cell started from slightly wrong y-position.

FIXED: If starting on a non-humans mission (e.g. Yllabian dogfight), the next mission 
will have the humans clustered instead of spread out.

FIXED: Hovering landers would drop way down below terrain for the last line segment 
behind the world x-origin.

FIXED: Hovering landers would too often switch to fighting mode (chasing the player).

FIXED: At HD resolution (and/or in a window), the border width for the mission picker cells 
and the shield readout are too thick. Also, when a mission is chosen, the expanding 
rectangle grows to the wrong coordinates (maybe display space instead of window space?)

FIXED: Spawning and then destroying enemies in training missions (using the debug controls) 
would cause humans to all clump together at the x-origin in the first military mission.

FIXED: More framerate vs. time fixes.

FIXED: Baiters fired based on framerate instead of time.

FIXED: Guppies didn't face left when traveling that way.
 
FIXED: Player ship would not teleport through stargate facing 
highest abuducting lander if player was carrying humans.

FIXED: Firebomber Showdown mission had dynamos spawning only at the 
top of the arena.

Some update (tick) handlers (e.g. CEnemy::Move variants) may still process 
or evaluate things by frame count instead of by time, causing incorrect timing 
on frame rates other than 60 fps.
   todo: reinvestigate; have not come across such cases recently as 
they may have all been fixed.

FIXED: View widgets do not activate/deactivate correctly, causing check assertions to fail. 
  Code architecture changed. All sprite installs/uninstalls also done in 
  main widget, not play arena view.

FIXED: Firebombers shoot too frequently as XP increases.

